{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","newTask","setNewTask","name","done","tasks","setTasks","useEffect","localTasks","localStorage","getItem","data","JSON","parse","className","onSubmit","e","preventDefault","newTasks","setItem","stringify","addTask","type","onChange","target","value","autoFocus","map","task","i","style","textDecoration","onClick","toggleDoneTask","splice","deleteTask","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAuGeA,MA9Ff,WAA6B,IAAD,EACGC,mBAAiB,IADpB,mBACpBC,EADoB,KACXC,EADW,OAEDF,mBAAkB,CAC3C,CAAEG,KAAM,mBAAoBC,MAAM,KAHR,mBAEpBC,EAFoB,KAEbC,EAFa,KA0C3B,OARAC,qBAAU,WACT,IAAMC,EAAaC,aAAaC,QAAQ,SACxC,GAAIF,EAAY,CACf,IAAMG,EAAgBC,KAAKC,MAAML,GACjCF,EAASK,MAER,IAGF,sBAAKG,UAAU,gBAAf,UACC,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,uBAAf,SACC,qBAAKA,UAAU,OAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAMC,SApCS,SAACC,GACrBA,EAAEC,iBAPa,SAACd,GAChB,IAAMe,EAAiB,sBAAOb,GAAP,CAAc,CAAEF,OAAMC,MAAM,KACnDK,aAAaU,QAAQ,QAASP,KAAKQ,UAAUF,IAC7CZ,EAASY,GAKTG,CAAQpB,GACRC,EAAW,KAiCN,UACC,uBACCY,UAAU,eACVQ,KAAK,OACLC,SAAU,SAACP,GAAD,OAAOd,EAAWc,EAAEQ,OAAOC,QACrCA,MAAOxB,EACPyB,WAAS,IAGV,wBAAQZ,UAAU,iCAAlB,6BAOL,qBAAKA,UAAU,MAAf,SACET,EAAMsB,KAAI,SAACC,EAAaC,GAAd,OACV,qBAAaf,UAAU,WAAvB,SACC,sBAAKA,UAAU,sBAAf,UACC,oBAAIgB,MAAO,CAAEC,eAAgBH,EAAKxB,KAAO,eAAiB,IAA1D,SACEwB,EAAKzB,OAGP,sBAAKW,UAAU,YAAf,UACC,wBACCA,UAAU,uBACVkB,QAAS,kBAzDM,SAACH,GACvB,IAAMX,EAAiB,YAAOb,GAC9Ba,EAASW,GAAGzB,MAAQc,EAASW,GAAGzB,KAEhCE,EAASY,GACTT,aAAaU,QAAQ,QAASP,KAAKQ,UAAUf,IAoDvB4B,CAAeJ,IAF/B,SAIED,EAAKxB,KAAO,SAAM,WAEpB,wBACCU,UAAU,sBACVkB,QAAS,kBAvDE,SAACH,GACnB,IAAIX,EAAiB,YAAOb,GAC5Ba,EAASgB,OAAOL,EAAG,GAEnBvB,EAASY,GACTT,aAAaU,QAAQ,QAASP,KAAKQ,UAAUf,IAkDvB8B,CAAWN,IAF3B,iCAbOA,YC7DAO,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.8e110439.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\ntype FormElement = React.FormEvent<HTMLFormElement>\n\ninterface ITask {\n\tname: string\n\tdone: boolean\n}\n\nfunction App(): JSX.Element {\n\tconst [newTask, setNewTask] = useState<string>('')\n\tconst [tasks, setTasks] = useState<ITask[]>([\n\t\t{ name: 'Mi primera Tarea', done: false },\n\t])\n\n\tconst addTask = (name: string) => {\n\t\tconst newTasks: ITask[] = [...tasks, { name, done: false }]\n\t\tlocalStorage.setItem('tasks', JSON.stringify(newTasks))\n\t\tsetTasks(newTasks)\n\t}\n\n\tconst handleSubmit = (e: FormElement): void => {\n\t\te.preventDefault()\n\t\taddTask(newTask)\n\t\tsetNewTask('')\n\t}\n\n\tconst toggleDoneTask = (i: number): void => {\n\t\tconst newTasks: ITask[] = [...tasks]\n\t\tnewTasks[i].done = !newTasks[i].done\n\n\t\tsetTasks(newTasks)\n\t\tlocalStorage.setItem('tasks', JSON.stringify(tasks))\n\t}\n\n\tconst deleteTask = (i: number): void => {\n\t\tlet newTasks: ITask[] = [...tasks]\n\t\tnewTasks.splice(i, 1)\n\n\t\tsetTasks(newTasks)\n\t\tlocalStorage.setItem('tasks', JSON.stringify(tasks))\n\t}\n\n\tuseEffect(() => {\n\t\tconst localTasks = localStorage.getItem('tasks')\n\t\tif (localTasks) {\n\t\t\tconst data: ITask[] = JSON.parse(localTasks)\n\t\t\tsetTasks(data)\n\t\t}\n\t}, [])\n\n\treturn (\n\t\t<div className='container p-4'>\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col-md-6 offset-md-3'>\n\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t<div className='card-body'>\n\t\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tonChange={(e) => setNewTask(e.target.value)}\n\t\t\t\t\t\t\t\t\tvalue={newTask}\n\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<button className='btn btn-success btn-block mt-2'>Save</button>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='row'>\n\t\t\t\t{tasks.map((task: ITask, i: number) => (\n\t\t\t\t\t<div key={i} className='col-md-4'>\n\t\t\t\t\t\t<div className='card card-body mt-2'>\n\t\t\t\t\t\t\t<h2 style={{ textDecoration: task.done ? 'line-through' : '' }}>\n\t\t\t\t\t\t\t\t{task.name}\n\t\t\t\t\t\t\t</h2>\n\n\t\t\t\t\t\t\t<div className='btn-group'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='px-5 btn btn-warning'\n\t\t\t\t\t\t\t\t\tonClick={() => toggleDoneTask(i)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{task.done ? 'âœ”' : 'âœ–'}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='px-5 btn btn-danger'\n\t\t\t\t\t\t\t\t\tonClick={() => deleteTask(i)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tðŸ’£\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport 'bootswatch/dist/flatly/bootstrap.min.css'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}